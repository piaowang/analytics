// Simple Arithmetics Grammar
// https://github.com/pegjs/pegjs/blob/master/examples/arithmetics.pegjs
// mod: support parse function call with single js object arg

Expression
  = head:Term tail:(_ ("+" / "-") _ Term)* {
      //console.log("+-", head, tail)
      return tail.reduce((result, element) => {
        let [ws, op, ws2, el] = element
        return { op, left: result, right: el }
      }, head);
    }

Term
  = _ head:Factor tail:(_ ("*" / "/") _ Factor)* _ {
      //console.log("*/", head, tail)
      return tail.reduce((result, element) => {
        let [ws, op, ws2, el] = element
        return { op, left: result, right: el }
      }, head);
    }

Factor
  = "(" _ expr:Expression _ ")" { return expr; }
  / Number
  / String
  / FunctionCall

_ "whitespace"
  = [ \t\n\r]*

FunctionCall
  = funcName: ([0-9a-z_]i+)"(" _ args:([^)]+) _ ")" {
    return {
      op: "call",
      left: funcName.join(""),
      right: eval("((...args) => args)(" + args.join("") + ")")
    }
  }

// https://github.com/pegjs/pegjs/blob/master/examples/json.pegjs
// ----- 6. Numbers -----

Number "number"
  = minus? int frac? exp? { return parseFloat(text()); }

decimal_point
  = "."

digit1_9
  = [1-9]

e
  = [eE]

exp
  = e (minus / plus)? DIGIT+

frac
  = decimal_point DIGIT+

int
  = zero / (digit1_9 DIGIT*)

minus
  = "-"

plus
  = "+"

zero
  = "0"

// ----- 7. Strings -----

String "string"
  = quotation_mark chars:char* quotation_mark { return chars.join(""); }

char
  = unescaped
  / escape
    sequence:(
        '"'
      / "\\"
      / "/"
      / "b" { return "\b"; }
      / "f" { return "\f"; }
      / "n" { return "\n"; }
      / "r" { return "\r"; }
      / "t" { return "\t"; }
      / "u" digits:$(HEXDIG HEXDIG HEXDIG HEXDIG) {
          return String.fromCharCode(parseInt(digits, 16));
        }
    )
    { return sequence; }

escape
  = "\\"

quotation_mark
  = '"'

unescaped
  = [^\0-\x1F\x22\x5C]

// ----- Core ABNF Rules -----

// See RFC 4234, Appendix B (http://tools.ietf.org/html/rfc4234).
DIGIT  = [0-9]
HEXDIG = [0-9a-f]i
